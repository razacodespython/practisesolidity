{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC20.sol",
    "1": "contracts/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        228
      ],
      "IERC20": [
        297
      ]
    },
    "id": 229,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "absolutePath": "contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 229,
        "sourceUnit": 298,
        "src": "58:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IERC20",
              "nameLocations": [
                "100:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 297,
              "src": "100:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "100:6:0"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 228,
        "linearizedBaseContracts": [
          228,
          297
        ],
        "name": "ERC20",
        "nameLocation": "91:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 6,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "210:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 228,
            "src": "195:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "195:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              235
            ],
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 8,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "257:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 228,
            "src": "245:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "245:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              242
            ],
            "constant": false,
            "functionSelector": "70a08231",
            "id": 12,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "336:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 228,
            "src": "304:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "312:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "304:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 10,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "323:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              260
            ],
            "constant": false,
            "functionSelector": "dd62ed3e",
            "id": 18,
            "mutability": "mutable",
            "name": "allowance",
            "nameLocation": "427:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 228,
            "src": "375:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 17,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "383:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "375:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 16,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "402:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "394:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "413:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 21,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "501:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 228,
            "src": "487:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 19,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "487:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "5052414354495345",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "508:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_9ec273a4ff0c395a34232c81e2dae16af7263c0a39ad949e29f016158599b84f",
                "typeString": "literal_string \"PRACTISE\""
              },
              "value": "PRACTISE"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 24,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "564:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 228,
            "src": "550:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 22,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "550:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "505254",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "573:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dbbb5ed78581ee8f75cf76d853f787b513ebae9736309c18e02607eb681e1cce",
                "typeString": "literal_string \"PRT\""
              },
              "value": "PRT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 27,
            "mutability": "mutable",
            "name": "decimals",
            "nameLocation": "627:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 228,
            "src": "614:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 25,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "614:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "638:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "739:365:0",
              "statements": [
                {
                  "expression": {
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "749:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 33,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "757:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "761:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "757:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "749:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "749:18:0"
                },
                {
                  "expression": {
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "845:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "859:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "845:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "845:26:0"
                },
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "962:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 43,
                      "indexExpression": {
                        "id": 42,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "972:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "962:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "981:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "962:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "962:30:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1074:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1066:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1066:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1066:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1078:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1085:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "1057:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "EmitStatement",
                  "src": "1052:45:0"
                }
              ]
            },
            "id": 57,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "725:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "720:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "719:19:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:0:0"
            },
            "scope": 228,
            "src": "708:396:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "1215:91:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 60,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1233:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1237:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1233:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 62,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1246:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1233:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1225:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:27:0"
                },
                {
                  "id": 66,
                  "nodeType": "PlaceholderStatement",
                  "src": "1298:1:0"
                }
              ]
            },
            "id": 68,
            "name": "onlyOwner",
            "nameLocation": "1203:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1212:2:0"
            },
            "src": "1194:112:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              251
            ],
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1486:163:0",
              "statements": [
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 77,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1496:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 80,
                      "indexExpression": {
                        "expression": {
                          "id": 78,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1506:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1510:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1506:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1496:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 81,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1521:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1496:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1496:31:0"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 84,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1537:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 86,
                      "indexExpression": {
                        "id": 85,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1547:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1537:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 87,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1561:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1537:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1537:30:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1591:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1595:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1591:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 93,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1603:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 94,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1614:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "1582:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1582:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "EmitStatement",
                  "src": "1577:44:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1638:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 76,
                  "id": 98,
                  "nodeType": "Return",
                  "src": "1631:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1421:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1438:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1430:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1454:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1449:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1429:32:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1480:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:6:0"
            },
            "scope": 228,
            "src": "1412:237:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              269
            ],
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1794:129:0",
              "statements": [
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 111,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1804:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "expression": {
                            "id": 112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1814:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1818:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1814:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1804:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 116,
                      "indexExpression": {
                        "id": 114,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1826:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1804:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 117,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "1837:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1804:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1867:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1871:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1867:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 123,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1879:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 124,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1888:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 120,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "1858:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "EmitStatement",
                  "src": "1853:42:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1912:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 110,
                  "id": 128,
                  "nodeType": "Return",
                  "src": "1905:11:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 107,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 106,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1769:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "1769:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1769:9:0"
              }
            ],
            "name": "approve",
            "nameLocation": "1722:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1738:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1730:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1752:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1747:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1747:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1729:30:0"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1788:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1787:6:0"
            },
            "scope": 228,
            "src": "1713:210:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              280
            ],
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2270:204:0",
              "statements": [
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 141,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "2280:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 145,
                        "indexExpression": {
                          "id": 142,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "2290:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2280:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "expression": {
                          "id": 143,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2298:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2302:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2298:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2280:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 147,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "2313:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2280:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2280:39:0"
                },
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 150,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2329:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 152,
                      "indexExpression": {
                        "id": 151,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "2339:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2329:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 153,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "2350:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2329:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "2329:27:0"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 156,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2366:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 158,
                      "indexExpression": {
                        "id": 157,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2376:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2366:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 159,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "2390:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2366:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:30:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 163,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "2420:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 164,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2428:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 165,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "2439:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 162,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2411:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "EmitStatement",
                  "src": "2406:40:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2463:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 140,
                  "id": 169,
                  "nodeType": "Return",
                  "src": "2456:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2155:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2185:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2177:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2177:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2209:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2201:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2233:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2228:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2228:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2167:78:0"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2264:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2263:6:0"
            },
            "scope": 228,
            "src": "2146:328:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2563:134:0",
              "statements": [
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 178,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2573:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 181,
                      "indexExpression": {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2583:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2587:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2583:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2573:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 182,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "2598:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2573:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2573:31:0"
                },
                {
                  "expression": {
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 185,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "2614:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 186,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "2629:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2614:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "2614:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2667:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2659:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 190,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2659:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2659:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 194,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2671:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2675:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2671:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 196,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "2683:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 189,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2650:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2650:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "EmitStatement",
                  "src": "2645:45:0"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 176,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 175,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2553:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "2553:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2553:9:0"
              }
            ],
            "name": "mint",
            "nameLocation": "2526:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2536:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2531:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2530:13:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2563:0:0"
            },
            "scope": 228,
            "src": "2517:180:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "2774:134:0",
              "statements": [
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 205,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2784:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 208,
                      "indexExpression": {
                        "expression": {
                          "id": 206,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2794:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2798:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2794:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2784:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 209,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2809:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2784:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2784:31:0"
                },
                {
                  "expression": {
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 212,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "2825:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 213,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2840:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2825:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 217,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2870:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2874:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2870:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2890:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2882:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2882:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2882:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 223,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2894:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 216,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2861:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "EmitStatement",
                  "src": "2856:45:0"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2747:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2757:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "2752:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2751:13:0"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2774:0:0"
            },
            "scope": 228,
            "src": "2738:170:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 229,
        "src": "82:2828:0",
        "usedErrors": []
      }
    ],
    "src": "32:2878:0"
  },
  "bytecode": "60c06040526008608090815267505241435449534560c01b60a0526004906100279082610196565b5060408051808201909152600381526214149560ea1b602082015260059061004f9082610196565b506006805460ff1916601217905534801561006957600080fd5b506040516109d33803806109d383398101604081905261008891610255565b600080546001600160a01b03191633908117825560018390558152600260209081526040808320849055825490518481526001600160a01b0390911692917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35061026e565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061012157607f821691505b60208210810361014157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561019157600081815260208120601f850160051c8101602086101561016e5750805b601f850160051c820191505b8181101561018d5782815560010161017a565b5050505b505050565b81516001600160401b038111156101af576101af6100f7565b6101c3816101bd845461010d565b84610147565b602080601f8311600181146101f857600084156101e05750858301515b600019600386901b1c1916600185901b17855561018d565b600085815260208120601f198616915b8281101561022757888601518255948401946001909101908401610208565b50858210156102455787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561026757600080fd5b5051919050565b6107568061027d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101585780638da5cb5b1461017857806395d89b41146101a3578063a0712d68146101ab578063a9059cbb146101be578063dd62ed3e146101d157600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806342966c6814610143575b600080fd5b6100c16101fc565b6040516100ce919061054c565b60405180910390f35b6100ea6100e53660046105b6565b61028a565b60405190151581526020016100ce565b61010360015481565b6040519081526020016100ce565b6100ea61011f3660046105e0565b610308565b6006546101319060ff1681565b60405160ff90911681526020016100ce565b61015661015136600461061c565b6103e3565b005b610103610166366004610635565b60026020526000908152604090205481565b60005461018b906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6100c161044a565b6101566101b936600461061c565b610457565b6100ea6101cc3660046105b6565b6104ce565b6101036101df366004610657565b600360209081526000928352604080842090915290825290205481565b600480546102099061068a565b80601f01602080910402602001604051908101604052809291908181526020018280546102359061068a565b80156102825780601f1061025757610100808354040283529160200191610282565b820191906000526020600020905b81548152906001019060200180831161026557829003601f168201915b505050505081565b600080546001600160a01b031633146102a257600080fd5b3360008181526003602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b6001600160a01b038316600090815260036020908152604080832033845290915281208054839190839061033d9084906106da565b90915550506001600160a01b0384166000908152600260205260408120805484929061036a9084906106da565b90915550506001600160a01b038316600090815260026020526040812080548492906103979084906106ed565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610701833981519152846040516103d191815260200190565b60405180910390a35060019392505050565b33600090815260026020526040812080548392906104029084906106da565b92505081905550806001600082825461041b91906106da565b90915550506040518181526000903390600080516020610701833981519152906020015b60405180910390a350565b600580546102099061068a565b6000546001600160a01b0316331461046e57600080fd5b336000908152600260205260408120805483929061048d9084906106ed565b9250508190555080600160008282546104a691906106ed565b909155505060405181815233906000906000805160206107018339815191529060200161043f565b336000908152600260205260408120805483919083906104ef9084906106da565b90915550506001600160a01b0383166000908152600260205260408120805484929061051c9084906106ed565b90915550506040518281526001600160a01b038416903390600080516020610701833981519152906020016102f6565b600060208083528351808285015260005b818110156105795785810183015185820160400152820161055d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105b157600080fd5b919050565b600080604083850312156105c957600080fd5b6105d28361059a565b946020939093013593505050565b6000806000606084860312156105f557600080fd5b6105fe8461059a565b925061060c6020850161059a565b9150604084013590509250925092565b60006020828403121561062e57600080fd5b5035919050565b60006020828403121561064757600080fd5b6106508261059a565b9392505050565b6000806040838503121561066a57600080fd5b6106738361059a565b91506106816020840161059a565b90509250929050565b600181811c9082168061069e57607f821691505b6020821081036106be57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610302576103026106c4565b80820180821115610302576103026106c456feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205fddb9a8dc7754b73b7a0fa2a11864eb5fe2f87542edd1b27cce546b136b783164736f6c63430008130033",
  "bytecodeSha1": "448d2157d2df02e649bd556539622923a807ea9c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {}
    },
    "statements": {
      "0": {
        "ERC20.approve": {
          "0": [
            1804,
            1843
          ],
          "1": [
            1853,
            1895
          ],
          "2": [
            1905,
            1916
          ]
        },
        "ERC20.burn": {
          "8": [
            2784,
            2815
          ],
          "9": [
            2825,
            2846
          ],
          "10": [
            2856,
            2901
          ]
        },
        "ERC20.mint": {
          "11": [
            2573,
            2604
          ],
          "12": [
            2614,
            2635
          ],
          "13": [
            2645,
            2690
          ]
        },
        "ERC20.transfer": {
          "14": [
            1496,
            1527
          ],
          "15": [
            1537,
            1567
          ],
          "16": [
            1577,
            1621
          ]
        },
        "ERC20.transferFrom": {
          "3": [
            2280,
            2319
          ],
          "4": [
            2329,
            2356
          ],
          "5": [
            2366,
            2396
          ],
          "6": [
            2406,
            2446
          ],
          "7": [
            2456,
            2467
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101585780638da5cb5b1461017857806395d89b41146101a3578063a0712d68146101ab578063a9059cbb146101be578063dd62ed3e146101d157600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806342966c6814610143575b600080fd5b6100c16101fc565b6040516100ce919061054c565b60405180910390f35b6100ea6100e53660046105b6565b61028a565b60405190151581526020016100ce565b61010360015481565b6040519081526020016100ce565b6100ea61011f3660046105e0565b610308565b6006546101319060ff1681565b60405160ff90911681526020016100ce565b61015661015136600461061c565b6103e3565b005b610103610166366004610635565b60026020526000908152604090205481565b60005461018b906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6100c161044a565b6101566101b936600461061c565b610457565b6100ea6101cc3660046105b6565b6104ce565b6101036101df366004610657565b600360209081526000928352604080842090915290825290205481565b600480546102099061068a565b80601f01602080910402602001604051908101604052809291908181526020018280546102359061068a565b80156102825780601f1061025757610100808354040283529160200191610282565b820191906000526020600020905b81548152906001019060200180831161026557829003601f168201915b505050505081565b600080546001600160a01b031633146102a257600080fd5b3360008181526003602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b6001600160a01b038316600090815260036020908152604080832033845290915281208054839190839061033d9084906106da565b90915550506001600160a01b0384166000908152600260205260408120805484929061036a9084906106da565b90915550506001600160a01b038316600090815260026020526040812080548492906103979084906106ed565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610701833981519152846040516103d191815260200190565b60405180910390a35060019392505050565b33600090815260026020526040812080548392906104029084906106da565b92505081905550806001600082825461041b91906106da565b90915550506040518181526000903390600080516020610701833981519152906020015b60405180910390a350565b600580546102099061068a565b6000546001600160a01b0316331461046e57600080fd5b336000908152600260205260408120805483929061048d9084906106ed565b9250508190555080600160008282546104a691906106ed565b909155505060405181815233906000906000805160206107018339815191529060200161043f565b336000908152600260205260408120805483919083906104ef9084906106da565b90915550506001600160a01b0383166000908152600260205260408120805484929061051c9084906106ed565b90915550506040518281526001600160a01b038416903390600080516020610701833981519152906020016102f6565b600060208083528351808285015260005b818110156105795785810183015185820160400152820161055d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105b157600080fd5b919050565b600080604083850312156105c957600080fd5b6105d28361059a565b946020939093013593505050565b6000806000606084860312156105f557600080fd5b6105fe8461059a565b925061060c6020850161059a565b9150604084013590509250925092565b60006020828403121561062e57600080fd5b5035919050565b60006020828403121561064757600080fd5b6106508261059a565b9392505050565b6000806040838503121561066a57600080fd5b6106738361059a565b91506106816020840161059a565b90509250929050565b600181811c9082168061069e57607f821691505b6020821081036106be57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610302576103026106c4565b80820180821115610302576103026106c456feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205fddb9a8dc7754b73b7a0fa2a11864eb5fe2f87542edd1b27cce546b136b783164736f6c63430008130033",
  "deployedSourceMap": "82:2828:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1713:210;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:2;;1162:22;1144:41;;1132:2;1117:18;1713:210:0;1004:187:2;245:23:0;;;;;;;;;1342:25:2;;;1330:2;1315:18;245:23:0;1196:177:2;2146:328:0;;;;;;:::i;:::-;;:::i;614:26::-;;;;;;;;;;;;1883:4:2;1871:17;;;1853:36;;1841:2;1826:18;614:26:0;1711:184:2;2738:170:0;;;;;;:::i;:::-;;:::i;:::-;;304:41;;;;;;:::i;:::-;;;;;;;;;;;;;;195:20;;;;;-1:-1:-1;;;;;195:20:0;;;;;;-1:-1:-1;;;;;2440:32:2;;;2422:51;;2410:2;2395:18;195:20:0;2276:203:2;550:28:0;;;:::i;2517:180::-;;;;;;:::i;:::-;;:::i;1412:237::-;;;;;;:::i;:::-;;:::i;375:61::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;487:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1713:210::-;1788:4;1246:5;;-1:-1:-1;;;;;1246:5:0;1233:10;:18;1225:27;;;;;;1814:10:::1;1804:21;::::0;;;:9:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;1804:30:0;::::1;::::0;;;;;;;;;;:39;;;1858:37;1342:25:2;;;1804:30:0;;1814:10;1858:37:::1;::::0;1315:18:2;1858:37:0::1;;;;;;;;-1:-1:-1::0;1912:4:0::1;1298:1;1713:210:::0;;;;:::o;2146:328::-;-1:-1:-1;;;;;2280:17:0;;2264:4;2280:17;;;:9;:17;;;;;;;;2298:10;2280:29;;;;;;;:39;;2313:6;;2280:29;2264:4;;2280:39;;2313:6;;2280:39;:::i;:::-;;;;-1:-1:-1;;;;;;;2329:17:0;;;;;;:9;:17;;;;;:27;;2350:6;;2329:17;:27;;2350:6;;2329:27;:::i;:::-;;;;-1:-1:-1;;;;;;;2366:20:0;;;;;;:9;:20;;;;;:30;;2390:6;;2366:20;:30;;2390:6;;2366:30;:::i;:::-;;;;;;;;2428:9;-1:-1:-1;;;;;2411:35:0;2420:6;-1:-1:-1;;;;;2411:35:0;-1:-1:-1;;;;;;;;;;;2439:6:0;2411:35;;;;1342:25:2;;1330:2;1315:18;;1196:177;2411:35:0;;;;;;;;-1:-1:-1;2463:4:0;2146:328;;;;;:::o;2738:170::-;2794:10;2784:21;;;;:9;:21;;;;;:31;;2809:6;;2784:21;:31;;2809:6;;2784:31;:::i;:::-;;;;;;;;2840:6;2825:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;2861:40:0;;1342:25:2;;;2890:1:0;;2870:10;;-1:-1:-1;;;;;;;;;;;2861:40:0;1330:2:2;1315:18;2861:40:0;;;;;;;;2738:170;:::o;550:28::-;;;;;;;:::i;2517:180::-;1246:5;;-1:-1:-1;;;;;1246:5:0;1233:10;:18;1225:27;;;;;;2583:10:::1;2573:21;::::0;;;:9:::1;:21;::::0;;;;:31;;2598:6;;2573:21;:31:::1;::::0;2598:6;;2573:31:::1;:::i;:::-;;;;;;;;2629:6;2614:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2650:40:0::1;::::0;1342:25:2;;;2671:10:0::1;::::0;2667:1:::1;::::0;-1:-1:-1;;;;;;;;;;;2650:40:0;1330:2:2;1315:18;2650:40:0::1;1196:177:2::0;1412:237:0;1506:10;1480:4;1496:21;;;:9;:21;;;;;:31;;1521:6;;1496:21;1480:4;;1496:31;;1521:6;;1496:31;:::i;:::-;;;;-1:-1:-1;;;;;;;1537:20:0;;;;;;:9;:20;;;;;:30;;1561:6;;1537:20;:30;;1561:6;;1537:30;:::i;:::-;;;;-1:-1:-1;;1582:39:0;;1342:25:2;;;-1:-1:-1;;;;;1582:39:0;;;1591:10;;-1:-1:-1;;;;;;;;;;;1582:39:0;1330:2:2;1315:18;1582:39:0;1196:177:2;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:2;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:2:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:2;;1900:180;-1:-1:-1;1900:180:2:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:2:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:127::-;3195:10;3190:3;3186:20;3183:1;3176:31;3226:4;3223:1;3216:15;3250:4;3247:1;3240:15;3266:128;3333:9;;;3354:11;;;3351:37;;;3368:18;;:::i;3399:125::-;3464:9;;;3485:10;;;3482:36;;;3498:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    82,
    2910
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x103 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x131 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x18B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x156 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x209 SWAP1 PUSH2 0x68A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x235 SWAP1 PUSH2 0x68A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x282 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x257 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x282 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x265 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x33D SWAP1 DUP5 SWAP1 PUSH2 0x6DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x36A SWAP1 DUP5 SWAP1 PUSH2 0x6DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x397 SWAP1 DUP5 SWAP1 PUSH2 0x6ED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x701 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x402 SWAP1 DUP5 SWAP1 PUSH2 0x6DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x701 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x209 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x48D SWAP1 DUP5 SWAP1 PUSH2 0x6ED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x701 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x43F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x4EF SWAP1 DUP5 SWAP1 PUSH2 0x6DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x51C SWAP1 DUP5 SWAP1 PUSH2 0x6ED JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x701 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x579 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x55D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D2 DUP4 PUSH2 0x59A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5FE DUP5 PUSH2 0x59A JUMP JUMPDEST SWAP3 POP PUSH2 0x60C PUSH1 0x20 DUP6 ADD PUSH2 0x59A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x650 DUP3 PUSH2 0x59A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x673 DUP4 PUSH2 0x59A JUMP JUMPDEST SWAP2 POP PUSH2 0x681 PUSH1 0x20 DUP5 ADD PUSH2 0x59A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x69E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x302 JUMPI PUSH2 0x302 PUSH2 0x6C4 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x302 JUMPI PUSH2 0x302 PUSH2 0x6C4 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xDD 0xB9 0xA8 0xDC PUSH24 0x54B73B7A0FA2A11864EB5FE2F87542EDD1B27CCE546B136B PUSH25 0x3164736F6C6343000813003300000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        82,
        2910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "49": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "53": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178"
    },
    "64": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "75": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA0712D68"
    },
    "82": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB"
    },
    "86": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE"
    },
    "97": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "108": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7"
    },
    "135": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "146": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "157": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "168": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x42966C68"
    },
    "175": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "179": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        82,
        2910
      ],
      "op": "REVERT",
      "path": "0"
    },
    "185": {
      "offset": [
        487,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "189": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC"
    },
    "192": {
      "fn": null,
      "jump": "i",
      "offset": [
        487,
        518
      ],
      "op": "JUMP",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "196": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "200": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54C"
    },
    "205": {
      "fn": null,
      "jump": "i",
      "offset": [
        487,
        518
      ],
      "op": "JUMP",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "209": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "SUB",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        487,
        518
      ],
      "op": "RETURN",
      "path": "0"
    },
    "215": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "216": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5"
    },
    "222": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "225": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B6"
    },
    "228": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        1713,
        1923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "229": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28A"
    },
    "233": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        1713,
        1923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "234": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "237": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "238": {
      "op": "SWAP1"
    },
    "239": {
      "op": "ISZERO"
    },
    "240": {
      "op": "ISZERO"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "MSTORE"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "op": "ADD"
    },
    "246": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "249": {
      "op": "JUMP"
    },
    "250": {
      "offset": [
        245,
        268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "ERC20.approve",
      "offset": [
        245,
        268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "254": {
      "fn": "ERC20.approve",
      "offset": [
        245,
        268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "256": {
      "fn": "ERC20.approve",
      "offset": [
        245,
        268
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "257": {
      "fn": "ERC20.approve",
      "offset": [
        245,
        268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "258": {
      "fn": "ERC20.approve",
      "offset": [
        245,
        268
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": "ERC20.approve",
      "offset": [
        245,
        268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": "ERC20.approve",
      "offset": [
        245,
        268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "262": {
      "fn": "ERC20.approve",
      "offset": [
        245,
        268
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "263": {
      "op": "SWAP1"
    },
    "264": {
      "op": "DUP2"
    },
    "265": {
      "op": "MSTORE"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "268": {
      "op": "ADD"
    },
    "269": {
      "offset": [
        245,
        268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "272": {
      "op": "JUMP"
    },
    "273": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "274": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "281": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E0"
    },
    "286": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2146,
        2474
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x308"
    },
    "291": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2146,
        2474
      ],
      "op": "JUMP",
      "path": "0"
    },
    "292": {
      "offset": [
        614,
        640
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "295": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "296": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "299": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "300": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "302": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "AND",
      "path": "0"
    },
    "303": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "DUP2",
      "path": "0"
    },
    "304": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "JUMP",
      "path": "0"
    },
    "305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "308": {
      "fn": "ERC20.transferFrom",
      "offset": [
        614,
        640
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "311": {
      "op": "SWAP1"
    },
    "312": {
      "op": "SWAP2"
    },
    "313": {
      "op": "AND"
    },
    "314": {
      "op": "DUP2"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "offset": [
        614,
        640
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "322": {
      "op": "JUMP"
    },
    "323": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "324": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "327": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151"
    },
    "330": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "331": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "333": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61C"
    },
    "336": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        2738,
        2908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "337": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "338": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E3"
    },
    "341": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        2738,
        2908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "342": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "343": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "STOP",
      "path": "0"
    },
    "344": {
      "offset": [
        304,
        345
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "348": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166"
    },
    "351": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "352": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "354": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x635"
    },
    "357": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        304,
        345
      ],
      "op": "JUMP",
      "path": "0"
    },
    "358": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "359": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "361": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "363": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "364": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "366": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "367": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "DUP2",
      "path": "0"
    },
    "368": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "369": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "371": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "372": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "373": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "374": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "DUP2",
      "path": "0"
    },
    "375": {
      "fn": "ERC20.burn",
      "offset": [
        304,
        345
      ],
      "op": "JUMP",
      "path": "0"
    },
    "376": {
      "offset": [
        195,
        215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "377": {
      "fn": "ERC20.burn",
      "offset": [
        195,
        215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "379": {
      "fn": "ERC20.burn",
      "offset": [
        195,
        215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "380": {
      "fn": "ERC20.burn",
      "offset": [
        195,
        215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18B"
    },
    "383": {
      "fn": "ERC20.burn",
      "offset": [
        195,
        215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "390": {
      "op": "SHL"
    },
    "391": {
      "op": "SUB"
    },
    "392": {
      "offset": [
        195,
        215
      ],
      "op": "AND",
      "path": "0"
    },
    "393": {
      "fn": "ERC20.burn",
      "offset": [
        195,
        215
      ],
      "op": "DUP2",
      "path": "0"
    },
    "394": {
      "fn": "ERC20.burn",
      "offset": [
        195,
        215
      ],
      "op": "JUMP",
      "path": "0"
    },
    "395": {
      "fn": "ERC20.burn",
      "offset": [
        195,
        215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "396": {
      "fn": "ERC20.burn",
      "offset": [
        195,
        215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "398": {
      "fn": "ERC20.burn",
      "offset": [
        195,
        215
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "op": "SWAP1"
    },
    "408": {
      "op": "SWAP2"
    },
    "409": {
      "op": "AND"
    },
    "410": {
      "op": "DUP2"
    },
    "411": {
      "op": "MSTORE"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "414": {
      "op": "ADD"
    },
    "415": {
      "offset": [
        195,
        215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "418": {
      "op": "JUMP"
    },
    "419": {
      "offset": [
        550,
        578
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "420": {
      "fn": "ERC20.burn",
      "offset": [
        550,
        578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "423": {
      "fn": "ERC20.burn",
      "offset": [
        550,
        578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44A"
    },
    "426": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        550,
        578
      ],
      "op": "JUMP",
      "path": "0"
    },
    "427": {
      "fn": "ERC20.mint",
      "offset": [
        2517,
        2697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "428": {
      "fn": "ERC20.mint",
      "offset": [
        2517,
        2697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "431": {
      "fn": "ERC20.mint",
      "offset": [
        2517,
        2697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B9"
    },
    "434": {
      "fn": "ERC20.mint",
      "offset": [
        2517,
        2697
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "435": {
      "fn": "ERC20.mint",
      "offset": [
        2517,
        2697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "437": {
      "fn": "ERC20.mint",
      "offset": [
        2517,
        2697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61C"
    },
    "440": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2517,
        2697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "441": {
      "fn": "ERC20.mint",
      "offset": [
        2517,
        2697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "fn": "ERC20.mint",
      "offset": [
        2517,
        2697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x457"
    },
    "445": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2517,
        2697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "446": {
      "fn": "ERC20.transfer",
      "offset": [
        1412,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "447": {
      "fn": "ERC20.transfer",
      "offset": [
        1412,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "450": {
      "fn": "ERC20.transfer",
      "offset": [
        1412,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC"
    },
    "453": {
      "fn": "ERC20.transfer",
      "offset": [
        1412,
        1649
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "454": {
      "fn": "ERC20.transfer",
      "offset": [
        1412,
        1649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "456": {
      "fn": "ERC20.transfer",
      "offset": [
        1412,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B6"
    },
    "459": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1412,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "460": {
      "fn": "ERC20.transfer",
      "offset": [
        1412,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "461": {
      "fn": "ERC20.transfer",
      "offset": [
        1412,
        1649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CE"
    },
    "464": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1412,
        1649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "465": {
      "offset": [
        375,
        436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "466": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "469": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF"
    },
    "472": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "473": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "475": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x657"
    },
    "478": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        375,
        436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "479": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "480": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "482": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "484": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "485": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "DUP2",
      "path": "0"
    },
    "486": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "487": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "489": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "490": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "DUP4",
      "path": "0"
    },
    "491": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "492": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "494": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "DUP1",
      "path": "0"
    },
    "495": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "DUP5",
      "path": "0"
    },
    "496": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "497": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "498": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "499": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "500": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "501": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "502": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "503": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "504": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "505": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "506": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "DUP2",
      "path": "0"
    },
    "507": {
      "fn": "ERC20.transfer",
      "offset": [
        375,
        436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "508": {
      "offset": [
        487,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "509": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "511": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "512": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "513": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x209"
    },
    "516": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "517": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68A"
    },
    "520": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        487,
        518
      ],
      "op": "JUMP",
      "path": "0"
    },
    "521": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "522": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "523": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "525": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ADD",
      "path": "0"
    },
    "526": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "528": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "529": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "530": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DIV",
      "path": "0"
    },
    "531": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "MUL",
      "path": "0"
    },
    "532": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "534": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ADD",
      "path": "0"
    },
    "535": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "537": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "538": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "539": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "540": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ADD",
      "path": "0"
    },
    "541": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "543": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "544": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "545": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "546": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "547": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "548": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "549": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "550": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "551": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "553": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ADD",
      "path": "0"
    },
    "554": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP3",
      "path": "0"
    },
    "555": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "556": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "557": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x235"
    },
    "560": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "561": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68A"
    },
    "564": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        487,
        518
      ],
      "op": "JUMP",
      "path": "0"
    },
    "565": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "567": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "568": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x282"
    },
    "571": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "572": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "573": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "575": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "LT",
      "path": "0"
    },
    "576": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x257"
    },
    "579": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "580": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "583": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "584": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP4",
      "path": "0"
    },
    "585": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "586": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DIV",
      "path": "0"
    },
    "587": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "MUL",
      "path": "0"
    },
    "588": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP4",
      "path": "0"
    },
    "589": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "590": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "591": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "593": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ADD",
      "path": "0"
    },
    "594": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "595": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x282"
    },
    "598": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "JUMP",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "600": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP3",
      "path": "0"
    },
    "601": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ADD",
      "path": "0"
    },
    "602": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "603": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "604": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "606": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "607": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "609": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "611": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "612": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "613": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "614": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "615": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "616": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "617": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "618": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "619": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "621": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ADD",
      "path": "0"
    },
    "622": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "623": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "625": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ADD",
      "path": "0"
    },
    "626": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "627": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP4",
      "path": "0"
    },
    "628": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "GT",
      "path": "0"
    },
    "629": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265"
    },
    "632": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "633": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP3",
      "path": "0"
    },
    "634": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "635": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SUB",
      "path": "0"
    },
    "636": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "638": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "AND",
      "path": "0"
    },
    "639": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP3",
      "path": "0"
    },
    "640": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "ADD",
      "path": "0"
    },
    "641": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "642": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "643": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "POP",
      "path": "0"
    },
    "644": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "POP",
      "path": "0"
    },
    "645": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "POP",
      "path": "0"
    },
    "646": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "POP",
      "path": "0"
    },
    "647": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "POP",
      "path": "0"
    },
    "648": {
      "fn": "ERC20.transfer",
      "offset": [
        487,
        518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "649": {
      "fn": "ERC20.transfer",
      "jump": "o",
      "offset": [
        487,
        518
      ],
      "op": "JUMP",
      "path": "0"
    },
    "650": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "651": {
      "fn": "ERC20.approve",
      "offset": [
        1788,
        1792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "653": {
      "offset": [
        1246,
        1251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "654": {
      "fn": "ERC20.approve",
      "offset": [
        1246,
        1251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "661": {
      "op": "SHL"
    },
    "662": {
      "op": "SUB"
    },
    "663": {
      "offset": [
        1246,
        1251
      ],
      "op": "AND",
      "path": "0"
    },
    "664": {
      "offset": [
        1233,
        1243
      ],
      "op": "CALLER",
      "path": "0"
    },
    "665": {
      "offset": [
        1233,
        1251
      ],
      "op": "EQ",
      "path": "0"
    },
    "666": {
      "offset": [
        1225,
        1252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A2"
    },
    "669": {
      "offset": [
        1225,
        1252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "670": {
      "fn": "ERC20.approve",
      "offset": [
        1225,
        1252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "672": {
      "fn": "ERC20.approve",
      "offset": [
        1225,
        1252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "673": {
      "fn": "ERC20.approve",
      "offset": [
        1225,
        1252
      ],
      "op": "REVERT",
      "path": "0"
    },
    "674": {
      "fn": "ERC20.approve",
      "offset": [
        1225,
        1252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "675": {
      "fn": "ERC20.approve",
      "offset": [
        1814,
        1824
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "676": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "678": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "DUP2",
      "path": "0"
    },
    "679": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "DUP2",
      "path": "0"
    },
    "680": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "681": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "683": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "685": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "686": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "DUP2",
      "path": "0"
    },
    "687": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "688": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "690": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "DUP1",
      "path": "0"
    },
    "691": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "DUP4",
      "path": "0"
    },
    "692": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1825
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "699": {
      "op": "SHL"
    },
    "700": {
      "op": "SUB"
    },
    "701": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "DUP9",
      "path": "0"
    },
    "702": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "AND",
      "path": "0"
    },
    "703": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "DUP1",
      "path": "0"
    },
    "704": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "DUP6",
      "path": "0"
    },
    "705": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "706": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "707": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "DUP4",
      "path": "0"
    },
    "708": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "709": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "710": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "DUP2",
      "path": "0"
    },
    "711": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "712": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "713": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1843
      ],
      "op": "DUP7",
      "path": "0"
    },
    "714": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "715": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1843
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "716": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 1
    },
    "717": {
      "op": "DUP6"
    },
    "718": {
      "op": "DUP2"
    },
    "719": {
      "op": "MSTORE"
    },
    "720": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "721": {
      "fn": "ERC20.approve",
      "offset": [
        1804,
        1834
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "722": {
      "fn": "ERC20.approve",
      "offset": [
        1814,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "723": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "756": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "759": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "761": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "762": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "763": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "764": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "SUB",
      "path": "0"
    },
    "765": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "766": {
      "fn": "ERC20.approve",
      "offset": [
        1858,
        1895
      ],
      "op": "LOG3",
      "path": "0"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "fn": "ERC20.approve",
      "offset": [
        1912,
        1916
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "770": {
      "offset": [
        1298,
        1299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "771": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "772": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "773": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "POP",
      "path": "0"
    },
    "774": {
      "fn": "ERC20.approve",
      "offset": [
        1713,
        1923
      ],
      "op": "POP",
      "path": "0"
    },
    "775": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        1713,
        1923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "783": {
      "op": "SHL"
    },
    "784": {
      "op": "SUB"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 3
    },
    "786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "AND",
      "path": "0"
    },
    "787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2264,
        2268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "794": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "796": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "798": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "799": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "801": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "802": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "DUP4",
      "path": "0"
    },
    "803": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "804": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2298,
        2308
      ],
      "op": "CALLER",
      "path": "0"
    },
    "805": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2309
      ],
      "op": "DUP5",
      "path": "0"
    },
    "806": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2309
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "807": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "808": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2309
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "809": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2309
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "810": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2309
      ],
      "op": "DUP2",
      "path": "0"
    },
    "811": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2309
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "812": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "813": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2319
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "814": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2313,
        2319
      ],
      "op": "DUP4",
      "path": "0"
    },
    "815": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2313,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "816": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "817": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2264,
        2268
      ],
      "op": "DUP4",
      "path": "0"
    },
    "818": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2264,
        2268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "819": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33D"
    },
    "822": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "823": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2313,
        2319
      ],
      "op": "DUP5",
      "path": "0"
    },
    "824": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2313,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "825": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "828": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2280,
        2319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "829": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "830": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "831": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "832": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2280,
        2319
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 4
    },
    "844": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "AND",
      "path": "0"
    },
    "845": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "847": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "848": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "849": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "850": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "852": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "854": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "855": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "857": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "858": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "859": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "860": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2356
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "861": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2350,
        2356
      ],
      "op": "DUP5",
      "path": "0"
    },
    "862": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2350,
        2356
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "863": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "867": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "868": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2350,
        2356
      ],
      "op": "DUP5",
      "path": "0"
    },
    "869": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2350,
        2356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "870": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "873": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2329,
        2356
      ],
      "op": "JUMP",
      "path": "0"
    },
    "874": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "875": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "876": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2356
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2329,
        2356
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "878": {
      "op": "POP"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "886": {
      "op": "SHL"
    },
    "887": {
      "op": "SUB"
    },
    "888": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 5
    },
    "889": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "AND",
      "path": "0"
    },
    "890": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "892": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "893": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "DUP2",
      "path": "0"
    },
    "894": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "895": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "897": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "899": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "900": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "902": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "DUP2",
      "path": "0"
    },
    "903": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "904": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "DUP1",
      "path": "0"
    },
    "905": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "906": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2390,
        2396
      ],
      "op": "DUP5",
      "path": "0"
    },
    "907": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2390,
        2396
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "908": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "909": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x397"
    },
    "912": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "913": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2390,
        2396
      ],
      "op": "DUP5",
      "path": "0"
    },
    "914": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2390,
        2396
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "915": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6ED"
    },
    "918": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2366,
        2396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "919": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "920": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "921": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "POP",
      "path": "0"
    },
    "922": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "POP",
      "path": "0"
    },
    "923": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "DUP2",
      "path": "0"
    },
    "924": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "925": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "926": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2366,
        2396
      ],
      "op": "POP",
      "path": "0"
    },
    "927": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2428,
        2437
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 6
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "op": "SUB"
    },
    "936": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "AND",
      "path": "0"
    },
    "937": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2420,
        2426
      ],
      "op": "DUP5",
      "path": "0"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "op": "SUB"
    },
    "946": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "AND",
      "path": "0"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "949": {
      "op": "DUP1"
    },
    "950": {
      "op": "MLOAD"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "953": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "956": {
      "op": "DUP4"
    },
    "957": {
      "op": "CODECOPY"
    },
    "958": {
      "op": "DUP2"
    },
    "959": {
      "op": "MLOAD"
    },
    "960": {
      "op": "SWAP2"
    },
    "961": {
      "op": "MSTORE"
    },
    "962": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2439,
        2445
      ],
      "op": "DUP5",
      "path": "0"
    },
    "963": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "965": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "966": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D1"
    },
    "969": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "MSTORE"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "974": {
      "op": "ADD"
    },
    "975": {
      "op": "SWAP1"
    },
    "976": {
      "op": "JUMP"
    },
    "977": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "978": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "980": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "981": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "DUP1",
      "path": "0"
    },
    "982": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "983": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "SUB",
      "path": "0"
    },
    "984": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "985": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2411,
        2446
      ],
      "op": "LOG3",
      "path": "0"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2463,
        2467
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "989": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "990": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "991": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "POP",
      "path": "0"
    },
    "992": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "POP",
      "path": "0"
    },
    "993": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2146,
        2474
      ],
      "op": "POP",
      "path": "0"
    },
    "994": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        2146,
        2474
      ],
      "op": "JUMP",
      "path": "0"
    },
    "995": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "996": {
      "fn": "ERC20.burn",
      "offset": [
        2794,
        2804
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "997": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "999": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1000": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1001": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1002": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1004": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1006": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1007": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1009": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1010": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1011": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1012": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1013": {
      "fn": "ERC20.burn",
      "offset": [
        2809,
        2815
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1014": {
      "fn": "ERC20.burn",
      "offset": [
        2809,
        2815
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1015": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2805
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1016": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x402"
    },
    "1019": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1020": {
      "fn": "ERC20.burn",
      "offset": [
        2809,
        2815
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1021": {
      "fn": "ERC20.burn",
      "offset": [
        2809,
        2815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1022": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "1025": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        2784,
        2815
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1026": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1027": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1028": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "POP",
      "path": "0"
    },
    "1029": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "POP",
      "path": "0"
    },
    "1030": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1031": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1032": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1033": {
      "fn": "ERC20.burn",
      "offset": [
        2784,
        2815
      ],
      "op": "POP",
      "path": "0"
    },
    "1034": {
      "fn": "ERC20.burn",
      "offset": [
        2840,
        2846
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 9
    },
    "1035": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1037": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1039": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1040": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1041": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1042": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41B"
    },
    "1045": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1046": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1047": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "1050": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        2825,
        2846
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1051": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1052": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1053": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1054": {
      "fn": "ERC20.burn",
      "offset": [
        2825,
        2846
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1055": {
      "op": "POP"
    },
    "1056": {
      "op": "POP"
    },
    "1057": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "1059": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1060": {
      "op": "DUP2"
    },
    "1061": {
      "op": "DUP2"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "fn": "ERC20.burn",
      "offset": [
        2890,
        2891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1065": {
      "fn": "ERC20.burn",
      "offset": [
        2890,
        2891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "ERC20.burn",
      "offset": [
        2870,
        2880
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1067": {
      "fn": "ERC20.burn",
      "offset": [
        2870,
        2880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1070": {
      "op": "DUP1"
    },
    "1071": {
      "op": "MLOAD"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1074": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1077": {
      "op": "DUP4"
    },
    "1078": {
      "op": "CODECOPY"
    },
    "1079": {
      "op": "DUP2"
    },
    "1080": {
      "op": "MLOAD"
    },
    "1081": {
      "op": "SWAP2"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1086": {
      "op": "ADD"
    },
    "1087": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1088": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1091": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1092": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1093": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "SUB",
      "path": "0"
    },
    "1094": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1095": {
      "fn": "ERC20.burn",
      "offset": [
        2861,
        2901
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1096": {
      "fn": "ERC20.burn",
      "offset": [
        2738,
        2908
      ],
      "op": "POP",
      "path": "0"
    },
    "1097": {
      "fn": "ERC20.burn",
      "jump": "o",
      "offset": [
        2738,
        2908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1098": {
      "offset": [
        550,
        578
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1099": {
      "fn": "ERC20.burn",
      "offset": [
        550,
        578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1101": {
      "fn": "ERC20.burn",
      "offset": [
        550,
        578
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1102": {
      "fn": "ERC20.burn",
      "offset": [
        550,
        578
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1103": {
      "fn": "ERC20.burn",
      "offset": [
        550,
        578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x209"
    },
    "1106": {
      "fn": "ERC20.burn",
      "offset": [
        550,
        578
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1107": {
      "fn": "ERC20.burn",
      "offset": [
        550,
        578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68A"
    },
    "1110": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        550,
        578
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1111": {
      "fn": "ERC20.mint",
      "offset": [
        2517,
        2697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1112": {
      "offset": [
        1246,
        1251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1114": {
      "fn": "ERC20.mint",
      "offset": [
        1246,
        1251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "op": "SUB"
    },
    "1123": {
      "offset": [
        1246,
        1251
      ],
      "op": "AND",
      "path": "0"
    },
    "1124": {
      "offset": [
        1233,
        1243
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1125": {
      "offset": [
        1233,
        1251
      ],
      "op": "EQ",
      "path": "0"
    },
    "1126": {
      "offset": [
        1225,
        1252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46E"
    },
    "1129": {
      "offset": [
        1225,
        1252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1130": {
      "fn": "ERC20.mint",
      "offset": [
        1225,
        1252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1132": {
      "fn": "ERC20.mint",
      "offset": [
        1225,
        1252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1133": {
      "fn": "ERC20.mint",
      "offset": [
        1225,
        1252
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1134": {
      "fn": "ERC20.mint",
      "offset": [
        1225,
        1252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1135": {
      "fn": "ERC20.mint",
      "offset": [
        2583,
        2593
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 11
    },
    "1136": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1138": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1139": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1140": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1141": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1143": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1145": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1146": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1148": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1149": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1150": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1151": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1152": {
      "fn": "ERC20.mint",
      "offset": [
        2598,
        2604
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1153": {
      "fn": "ERC20.mint",
      "offset": [
        2598,
        2604
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1154": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2594
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1155": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48D"
    },
    "1158": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1159": {
      "fn": "ERC20.mint",
      "offset": [
        2598,
        2604
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1160": {
      "fn": "ERC20.mint",
      "offset": [
        2598,
        2604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1161": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6ED"
    },
    "1164": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2573,
        2604
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1165": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1166": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1167": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "POP",
      "path": "0"
    },
    "1168": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "POP",
      "path": "0"
    },
    "1169": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1170": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1171": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1172": {
      "fn": "ERC20.mint",
      "offset": [
        2573,
        2604
      ],
      "op": "POP",
      "path": "0"
    },
    "1173": {
      "fn": "ERC20.mint",
      "offset": [
        2629,
        2635
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 12
    },
    "1174": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1176": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1178": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1179": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1180": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1181": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "1184": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1185": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1186": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6ED"
    },
    "1189": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2614,
        2635
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1190": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1192": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1193": {
      "fn": "ERC20.mint",
      "offset": [
        2614,
        2635
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "op": "POP"
    },
    "1196": {
      "fn": "ERC20.mint",
      "offset": [
        2650,
        2690
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x40"
    },
    "1198": {
      "fn": "ERC20.mint",
      "offset": [
        2650,
        2690
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1199": {
      "op": "DUP2"
    },
    "1200": {
      "op": "DUP2"
    },
    "1201": {
      "op": "MSTORE"
    },
    "1202": {
      "fn": "ERC20.mint",
      "offset": [
        2671,
        2681
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1203": {
      "fn": "ERC20.mint",
      "offset": [
        2671,
        2681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1204": {
      "fn": "ERC20.mint",
      "offset": [
        2667,
        2668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1206": {
      "fn": "ERC20.mint",
      "offset": [
        2667,
        2668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1209": {
      "op": "DUP1"
    },
    "1210": {
      "op": "MLOAD"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1213": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1216": {
      "op": "DUP4"
    },
    "1217": {
      "op": "CODECOPY"
    },
    "1218": {
      "op": "DUP2"
    },
    "1219": {
      "op": "MLOAD"
    },
    "1220": {
      "op": "SWAP2"
    },
    "1221": {
      "op": "MSTORE"
    },
    "1222": {
      "fn": "ERC20.mint",
      "offset": [
        2650,
        2690
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1225": {
      "op": "ADD"
    },
    "1226": {
      "fn": "ERC20.mint",
      "offset": [
        2650,
        2690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43F"
    },
    "1229": {
      "op": "JUMP"
    },
    "1230": {
      "fn": "ERC20.transfer",
      "offset": [
        1412,
        1649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1231": {
      "fn": "ERC20.transfer",
      "offset": [
        1506,
        1516
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 14
    },
    "1232": {
      "fn": "ERC20.transfer",
      "offset": [
        1480,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1234": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1235": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1517
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1236": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1517
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1237": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1239": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1241": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1517
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1242": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1244": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1517
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1245": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1517
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1246": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1247": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1248": {
      "fn": "ERC20.transfer",
      "offset": [
        1521,
        1527
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1249": {
      "fn": "ERC20.transfer",
      "offset": [
        1521,
        1527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1250": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1251": {
      "fn": "ERC20.transfer",
      "offset": [
        1480,
        1484
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1252": {
      "fn": "ERC20.transfer",
      "offset": [
        1480,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1253": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EF"
    },
    "1256": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1257": {
      "fn": "ERC20.transfer",
      "offset": [
        1521,
        1527
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1258": {
      "fn": "ERC20.transfer",
      "offset": [
        1521,
        1527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1259": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "1262": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1496,
        1527
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1263": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1264": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1265": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1266": {
      "fn": "ERC20.transfer",
      "offset": [
        1496,
        1527
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1267": {
      "op": "POP"
    },
    "1268": {
      "op": "POP"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "op": "SUB"
    },
    "1277": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 15
    },
    "1278": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "AND",
      "path": "0"
    },
    "1279": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1281": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1282": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1283": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1284": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1286": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1288": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1289": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1291": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1292": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1293": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1567
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1294": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1567
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1295": {
      "fn": "ERC20.transfer",
      "offset": [
        1561,
        1567
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1296": {
      "fn": "ERC20.transfer",
      "offset": [
        1561,
        1567
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1297": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1298": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51C"
    },
    "1301": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1302": {
      "fn": "ERC20.transfer",
      "offset": [
        1561,
        1567
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1303": {
      "fn": "ERC20.transfer",
      "offset": [
        1561,
        1567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1304": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6ED"
    },
    "1307": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1537,
        1567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1308": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1309": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1310": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1567
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1311": {
      "fn": "ERC20.transfer",
      "offset": [
        1537,
        1567
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "op": "POP"
    },
    "1314": {
      "fn": "ERC20.transfer",
      "offset": [
        1582,
        1621
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x40"
    },
    "1316": {
      "fn": "ERC20.transfer",
      "offset": [
        1582,
        1621
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1317": {
      "op": "DUP3"
    },
    "1318": {
      "op": "DUP2"
    },
    "1319": {
      "op": "MSTORE"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "op": "SUB"
    },
    "1328": {
      "fn": "ERC20.transfer",
      "offset": [
        1582,
        1621
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1329": {
      "fn": "ERC20.transfer",
      "offset": [
        1582,
        1621
      ],
      "op": "AND",
      "path": "0"
    },
    "1330": {
      "fn": "ERC20.transfer",
      "offset": [
        1582,
        1621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1331": {
      "fn": "ERC20.transfer",
      "offset": [
        1591,
        1601
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1332": {
      "fn": "ERC20.transfer",
      "offset": [
        1591,
        1601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1335": {
      "op": "DUP1"
    },
    "1336": {
      "op": "MLOAD"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1339": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1342": {
      "op": "DUP4"
    },
    "1343": {
      "op": "CODECOPY"
    },
    "1344": {
      "op": "DUP2"
    },
    "1345": {
      "op": "MLOAD"
    },
    "1346": {
      "op": "SWAP2"
    },
    "1347": {
      "op": "MSTORE"
    },
    "1348": {
      "fn": "ERC20.transfer",
      "offset": [
        1582,
        1621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1351": {
      "op": "ADD"
    },
    "1352": {
      "fn": "ERC20.transfer",
      "offset": [
        1582,
        1621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1355": {
      "op": "JUMP"
    },
    "1356": {
      "op": "JUMPDEST"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1361": {
      "op": "DUP1"
    },
    "1362": {
      "op": "DUP4"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "DUP4"
    },
    "1365": {
      "op": "MLOAD"
    },
    "1366": {
      "op": "DUP1"
    },
    "1367": {
      "op": "DUP3"
    },
    "1368": {
      "op": "DUP6"
    },
    "1369": {
      "op": "ADD"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1373": {
      "op": "JUMPDEST"
    },
    "1374": {
      "op": "DUP2"
    },
    "1375": {
      "op": "DUP2"
    },
    "1376": {
      "op": "LT"
    },
    "1377": {
      "op": "ISZERO"
    },
    "1378": {
      "op": "PUSH2",
      "value": "0x579"
    },
    "1381": {
      "op": "JUMPI"
    },
    "1382": {
      "op": "DUP6"
    },
    "1383": {
      "op": "DUP2"
    },
    "1384": {
      "op": "ADD"
    },
    "1385": {
      "op": "DUP4"
    },
    "1386": {
      "op": "ADD"
    },
    "1387": {
      "op": "MLOAD"
    },
    "1388": {
      "op": "DUP6"
    },
    "1389": {
      "op": "DUP3"
    },
    "1390": {
      "op": "ADD"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1393": {
      "op": "ADD"
    },
    "1394": {
      "op": "MSTORE"
    },
    "1395": {
      "op": "DUP3"
    },
    "1396": {
      "op": "ADD"
    },
    "1397": {
      "op": "PUSH2",
      "value": "0x55D"
    },
    "1400": {
      "op": "JUMP"
    },
    "1401": {
      "op": "JUMPDEST"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1407": {
      "op": "DUP3"
    },
    "1408": {
      "op": "DUP7"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "ADD"
    },
    "1411": {
      "op": "MSTORE"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1416": {
      "op": "NOT"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1419": {
      "op": "DUP4"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "AND"
    },
    "1422": {
      "op": "DUP6"
    },
    "1423": {
      "op": "ADD"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "SWAP3"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "op": "SWAP3"
    },
    "1430": {
      "op": "SWAP2"
    },
    "1431": {
      "op": "POP"
    },
    "1432": {
      "op": "POP"
    },
    "1433": {
      "jump": "o",
      "op": "JUMP"
    },
    "1434": {
      "op": "JUMPDEST"
    },
    "1435": {
      "op": "DUP1"
    },
    "1436": {
      "op": "CALLDATALOAD"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "op": "SUB"
    },
    "1445": {
      "op": "DUP2"
    },
    "1446": {
      "op": "AND"
    },
    "1447": {
      "op": "DUP2"
    },
    "1448": {
      "op": "EQ"
    },
    "1449": {
      "op": "PUSH2",
      "value": "0x5B1"
    },
    "1452": {
      "op": "JUMPI"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1455": {
      "op": "DUP1"
    },
    "1456": {
      "op": "REVERT"
    },
    "1457": {
      "op": "JUMPDEST"
    },
    "1458": {
      "op": "SWAP2"
    },
    "1459": {
      "op": "SWAP1"
    },
    "1460": {
      "op": "POP"
    },
    "1461": {
      "jump": "o",
      "op": "JUMP"
    },
    "1462": {
      "op": "JUMPDEST"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1465": {
      "op": "DUP1"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1468": {
      "op": "DUP4"
    },
    "1469": {
      "op": "DUP6"
    },
    "1470": {
      "op": "SUB"
    },
    "1471": {
      "op": "SLT"
    },
    "1472": {
      "op": "ISZERO"
    },
    "1473": {
      "op": "PUSH2",
      "value": "0x5C9"
    },
    "1476": {
      "op": "JUMPI"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1479": {
      "op": "DUP1"
    },
    "1480": {
      "op": "REVERT"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "PUSH2",
      "value": "0x5D2"
    },
    "1485": {
      "op": "DUP4"
    },
    "1486": {
      "op": "PUSH2",
      "value": "0x59A"
    },
    "1489": {
      "jump": "i",
      "op": "JUMP"
    },
    "1490": {
      "op": "JUMPDEST"
    },
    "1491": {
      "op": "SWAP5"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1494": {
      "op": "SWAP4"
    },
    "1495": {
      "op": "SWAP1"
    },
    "1496": {
      "op": "SWAP4"
    },
    "1497": {
      "op": "ADD"
    },
    "1498": {
      "op": "CALLDATALOAD"
    },
    "1499": {
      "op": "SWAP4"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "op": "POP"
    },
    "1502": {
      "op": "POP"
    },
    "1503": {
      "jump": "o",
      "op": "JUMP"
    },
    "1504": {
      "op": "JUMPDEST"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1507": {
      "op": "DUP1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1512": {
      "op": "DUP5"
    },
    "1513": {
      "op": "DUP7"
    },
    "1514": {
      "op": "SUB"
    },
    "1515": {
      "op": "SLT"
    },
    "1516": {
      "op": "ISZERO"
    },
    "1517": {
      "op": "PUSH2",
      "value": "0x5F5"
    },
    "1520": {
      "op": "JUMPI"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1523": {
      "op": "DUP1"
    },
    "1524": {
      "op": "REVERT"
    },
    "1525": {
      "op": "JUMPDEST"
    },
    "1526": {
      "op": "PUSH2",
      "value": "0x5FE"
    },
    "1529": {
      "op": "DUP5"
    },
    "1530": {
      "op": "PUSH2",
      "value": "0x59A"
    },
    "1533": {
      "jump": "i",
      "op": "JUMP"
    },
    "1534": {
      "op": "JUMPDEST"
    },
    "1535": {
      "op": "SWAP3"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "PUSH2",
      "value": "0x60C"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1542": {
      "op": "DUP6"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "op": "PUSH2",
      "value": "0x59A"
    },
    "1547": {
      "jump": "i",
      "op": "JUMP"
    },
    "1548": {
      "op": "JUMPDEST"
    },
    "1549": {
      "op": "SWAP2"
    },
    "1550": {
      "op": "POP"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1553": {
      "op": "DUP5"
    },
    "1554": {
      "op": "ADD"
    },
    "1555": {
      "op": "CALLDATALOAD"
    },
    "1556": {
      "op": "SWAP1"
    },
    "1557": {
      "op": "POP"
    },
    "1558": {
      "op": "SWAP3"
    },
    "1559": {
      "op": "POP"
    },
    "1560": {
      "op": "SWAP3"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "op": "SWAP3"
    },
    "1563": {
      "jump": "o",
      "op": "JUMP"
    },
    "1564": {
      "op": "JUMPDEST"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1569": {
      "op": "DUP3"
    },
    "1570": {
      "op": "DUP5"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "op": "SLT"
    },
    "1573": {
      "op": "ISZERO"
    },
    "1574": {
      "op": "PUSH2",
      "value": "0x62E"
    },
    "1577": {
      "op": "JUMPI"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1580": {
      "op": "DUP1"
    },
    "1581": {
      "op": "REVERT"
    },
    "1582": {
      "op": "JUMPDEST"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "op": "CALLDATALOAD"
    },
    "1585": {
      "op": "SWAP2"
    },
    "1586": {
      "op": "SWAP1"
    },
    "1587": {
      "op": "POP"
    },
    "1588": {
      "jump": "o",
      "op": "JUMP"
    },
    "1589": {
      "op": "JUMPDEST"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1594": {
      "op": "DUP3"
    },
    "1595": {
      "op": "DUP5"
    },
    "1596": {
      "op": "SUB"
    },
    "1597": {
      "op": "SLT"
    },
    "1598": {
      "op": "ISZERO"
    },
    "1599": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1602": {
      "op": "JUMPI"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1605": {
      "op": "DUP1"
    },
    "1606": {
      "op": "REVERT"
    },
    "1607": {
      "op": "JUMPDEST"
    },
    "1608": {
      "op": "PUSH2",
      "value": "0x650"
    },
    "1611": {
      "op": "DUP3"
    },
    "1612": {
      "op": "PUSH2",
      "value": "0x59A"
    },
    "1615": {
      "jump": "i",
      "op": "JUMP"
    },
    "1616": {
      "op": "JUMPDEST"
    },
    "1617": {
      "op": "SWAP4"
    },
    "1618": {
      "op": "SWAP3"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "op": "POP"
    },
    "1622": {
      "jump": "o",
      "op": "JUMP"
    },
    "1623": {
      "op": "JUMPDEST"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1626": {
      "op": "DUP1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1629": {
      "op": "DUP4"
    },
    "1630": {
      "op": "DUP6"
    },
    "1631": {
      "op": "SUB"
    },
    "1632": {
      "op": "SLT"
    },
    "1633": {
      "op": "ISZERO"
    },
    "1634": {
      "op": "PUSH2",
      "value": "0x66A"
    },
    "1637": {
      "op": "JUMPI"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1640": {
      "op": "DUP1"
    },
    "1641": {
      "op": "REVERT"
    },
    "1642": {
      "op": "JUMPDEST"
    },
    "1643": {
      "op": "PUSH2",
      "value": "0x673"
    },
    "1646": {
      "op": "DUP4"
    },
    "1647": {
      "op": "PUSH2",
      "value": "0x59A"
    },
    "1650": {
      "jump": "i",
      "op": "JUMP"
    },
    "1651": {
      "op": "JUMPDEST"
    },
    "1652": {
      "op": "SWAP2"
    },
    "1653": {
      "op": "POP"
    },
    "1654": {
      "op": "PUSH2",
      "value": "0x681"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1659": {
      "op": "DUP5"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "op": "PUSH2",
      "value": "0x59A"
    },
    "1664": {
      "jump": "i",
      "op": "JUMP"
    },
    "1665": {
      "op": "JUMPDEST"
    },
    "1666": {
      "op": "SWAP1"
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "op": "SWAP3"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "op": "SWAP3"
    },
    "1671": {
      "op": "SWAP1"
    },
    "1672": {
      "op": "POP"
    },
    "1673": {
      "jump": "o",
      "op": "JUMP"
    },
    "1674": {
      "op": "JUMPDEST"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "DUP2"
    },
    "1678": {
      "op": "DUP2"
    },
    "1679": {
      "op": "SHR"
    },
    "1680": {
      "op": "SWAP1"
    },
    "1681": {
      "op": "DUP3"
    },
    "1682": {
      "op": "AND"
    },
    "1683": {
      "op": "DUP1"
    },
    "1684": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1687": {
      "op": "JUMPI"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1690": {
      "op": "DUP3"
    },
    "1691": {
      "op": "AND"
    },
    "1692": {
      "op": "SWAP2"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1697": {
      "op": "DUP3"
    },
    "1698": {
      "op": "LT"
    },
    "1699": {
      "op": "DUP2"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "op": "PUSH2",
      "value": "0x6BE"
    },
    "1704": {
      "op": "JUMPI"
    },
    "1705": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1712": {
      "op": "SHL"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1715": {
      "op": "MSTORE"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1720": {
      "op": "MSTORE"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1725": {
      "op": "REVERT"
    },
    "1726": {
      "op": "JUMPDEST"
    },
    "1727": {
      "op": "POP"
    },
    "1728": {
      "op": "SWAP2"
    },
    "1729": {
      "op": "SWAP1"
    },
    "1730": {
      "op": "POP"
    },
    "1731": {
      "jump": "o",
      "op": "JUMP"
    },
    "1732": {
      "op": "JUMPDEST"
    },
    "1733": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1743": {
      "op": "MSTORE"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1748": {
      "op": "MSTORE"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1753": {
      "op": "REVERT"
    },
    "1754": {
      "op": "JUMPDEST"
    },
    "1755": {
      "op": "DUP2"
    },
    "1756": {
      "op": "DUP2"
    },
    "1757": {
      "op": "SUB"
    },
    "1758": {
      "op": "DUP2"
    },
    "1759": {
      "op": "DUP2"
    },
    "1760": {
      "op": "GT"
    },
    "1761": {
      "op": "ISZERO"
    },
    "1762": {
      "op": "PUSH2",
      "value": "0x302"
    },
    "1765": {
      "op": "JUMPI"
    },
    "1766": {
      "op": "PUSH2",
      "value": "0x302"
    },
    "1769": {
      "op": "PUSH2",
      "value": "0x6C4"
    },
    "1772": {
      "jump": "i",
      "op": "JUMP"
    },
    "1773": {
      "op": "JUMPDEST"
    },
    "1774": {
      "op": "DUP1"
    },
    "1775": {
      "op": "DUP3"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "op": "DUP1"
    },
    "1778": {
      "op": "DUP3"
    },
    "1779": {
      "op": "GT"
    },
    "1780": {
      "op": "ISZERO"
    },
    "1781": {
      "op": "PUSH2",
      "value": "0x302"
    },
    "1784": {
      "op": "JUMPI"
    },
    "1785": {
      "op": "PUSH2",
      "value": "0x302"
    },
    "1788": {
      "op": "PUSH2",
      "value": "0x6C4"
    },
    "1791": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "94773b95bd9ac2c8d09231f5dfe666b57264204b",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"./IERC20.sol\";\n\ncontract ERC20 is IERC20 {\n\n    /////////STATE VARIABLES///////\n    //reminder to self: type visibility name\n    address public owner; //owner of the contract\n    uint public totalSupply; //totalsupply of the contract\n    mapping(address => uint) public balanceOf; //balance of the caller\n    mapping(address => mapping(address => uint)) public allowance; //owner approves => the spender + the amount\n    string public name = \"PRACTISE\"; //name of the ERC20 token\n    string public symbol = \"PRT\"; // Symbol of the erc 20 toke \n    uint8 public decimals = 18; //decimals of the token\n\n    //////////CONSTRUCTOR///////////\n    constructor(uint _totalSupply) {\n        owner = msg.sender; // set owner of the contract to address deploying the smartcontract\n        totalSupply = _totalSupply; //constructor takes totalSupply as param, when deployed send to deployer address\n        balanceOf[owner] = totalSupply; // set the balance of owner equal to total supply\n        emit Transfer(address(0), owner, totalSupply);\n    }\n\n    ///////////MODIFIERS////////////\n    //only allow owners to execute transaction\n    modifier onlyOwner() {\n        require(msg.sender== owner); //only owner can call this function\n        _;\n    }\n\n    //////////FUNCTIONS////////////\n    //transfer tokens from the sender to the designated address\n    function transfer(address recipient, uint amount) external returns (bool) {\n        balanceOf[msg.sender] -= amount;\n        balanceOf[recipient] += amount;\n        emit Transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n\n    //owner approving the allowance limit for an address\n    function approve(address spender, uint amount) external onlyOwner returns (bool) {\n        allowance[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    //function that transfers tokens from one address to another\n    //caller can only transfer amounts if amount is lower than allowance\n    //allowance is set in approve function and kept track in allowance mapping\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint amount\n    ) external returns (bool) {\n        allowance[sender][msg.sender] -= amount;\n        balanceOf[sender] -= amount;\n        balanceOf[recipient] += amount;\n        emit Transfer(sender, recipient, amount);\n        return true;\n    }\n\n    //only owner can mint new tokens\n    function mint(uint amount) external onlyOwner {\n        balanceOf[msg.sender] += amount;\n        totalSupply += amount;\n        emit Transfer(address(0), msg.sender, amount);\n    }\n\n    //anyone can burn their tokens\n    function burn(uint amount) external {\n        balanceOf[msg.sender] -= amount;\n        totalSupply -= amount;\n        emit Transfer(msg.sender, address(0), amount);\n    }\n}",
  "sourceMap": "487:31:0:-:0;82:2828;487:31;;82:2828;487:31;;;-1:-1:-1;;;487:31:0;;;;;;;;:::i;:::-;-1:-1:-1;550:28:0;;;;;;;;;;;;-1:-1:-1;;;550:28:0;;;;;;;;;;:::i;:::-;-1:-1:-1;614:26:0;;;-1:-1:-1;;614:26:0;638:2;614:26;;;708:396;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;749:5;:18;;-1:-1:-1;;;;;;749:18:0;757:10;749:18;;;;;-1:-1:-1;845:26:0;;;962:16;;:9;:16;;;;;;;;:30;;;1078:5;;1057:40;;3070:25:2;;;-1:-1:-1;;;;;1078:5:0;;;;749;1057:40;;3043:18:2;1057:40:0;;;;;;;708:396;82:2828;;14:127:2;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:2;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:2;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:2;;;2580:26;2531:89;-1:-1:-1;;1335:1:2;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:2;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:2;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:2;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:2:o;2735:184::-;2805:6;2858:2;2846:9;2837:7;2833:23;2829:32;2826:52;;;2874:1;2871;2864:12;2826:52;-1:-1:-1;2897:16:2;;2735:184;-1:-1:-1;2735:184:2:o;2924:177::-;82:2828:0;;;;;;",
  "sourcePath": "contracts/ERC20.sol",
  "type": "contract"
}